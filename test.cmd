分布式系统的挑战
	异构性
		网络/计算机硬件/操作系统/编程语言
	开放性
		可扩展性
	安全性
	可伸缩性
	故障处理
	并发性
	透明性
	服务质量
分布式系统设计
	物理模型
		底层硬件元素的表示
		早期分布式系统 ->　互联网分布式系统 -> 当代分布式系统
	体系结构模型
		元素
			通信实体
				系统角度	
					进程/线程/传感器
				编程角度
					对象/组建/web服务
			通信范式
				IPC
				远程调用
					RPC/RMI
				间接通信
					时间/空间解藕
					组通信/发布－订阅/消息队列/元组空间/分布式共享内存DSM
			角色和责任
				客户端－服务器
				对等体系结构
			放置策略
				将服务映射到多个服务器
					web/NIS
				缓存
					web浏览器/代理服务器
				移动代码
					applet
				移动代理
		体系结构模式
			分层体系机构
				把服务垂直组织
				计算机和硬件/os/中间件/应用和服务
			层次化体系结构
				组织给定层功能的技术
				表示/应用/数据逻辑层
			瘦客户
				一个软件层,执行程序或者访问远程服务是，提供基于窗口的本地用户界面
				网络计算机/虚拟网络计算(VNC)
			其他模式
				代理 proxy
				业务代理 brokerage
				反射 reflection 
		中间件解决方案
			分布式对象
			分布式组件
			发布－订阅系统
			消息队列
			web服务
			对等

			-----
			中间件的限制
				依赖检查/错误校验/安全手段
	基础模型
		交互模型
			影响交互的重要因素
				通信通道的性能
					延迟/带宽/抖动
				计算机时钟和时序时间
					时钟同步
					时钟飘移
			交互模型的变体
				同步分布式系统
					进程执行/通信延时/时钟飘移率　都要假设
				异步分布式系统
					进程执行/通信延时/时钟飘移率　没有限制
			事件排序
				pepperland协定
		故障模型
			遗漏故障
				进程遗漏故障
				通信遗漏故障
					发送/接收/通道　遗漏故障
			随机故障
				进程/通信 ..
			时序故障
				时钟错误/负载问题
			--------------------
			故障检测
				很难
			故障屏蔽
				数据副本
				故障转换
		安全模型
			保护对象
			保护进程和它们的交互
				进程威胁/通信通道的威胁
			解除安全威胁
				密码学
				认证
				安全通道
					vpn/ssl 
			其他威胁
				拒绝服务
				移动代码
网络和网际互联
	构建分布式系统使用的网络
		传输介质
			电线/电缆/光线/无线频道
		硬件设备
			路由器/交换机/网桥/转发器/网络接口
		软件组件
			协议栈/通信处理器/驱动程序
	通信子系统
		提供通信设施的软硬件组合
	分布式系统的联网问题
		性能
			延迟
				软件开销/路由延迟/负载
			数据传输率
				物理特征
		可伸缩性
		可靠性
		完全性
		移动性
		服务质量
		组播
	网络类型
		个域网/局域网/广域网/城域网/无线网络
	网络原理
		数据包的传输
			逻辑单元发送消息，分割成数据包
		数据流
			及时传输
				ATＭ网络
				RTP
		交换模式
			广播
			电路交换
				电话网
			包交换
				存储转发网络
			帧中继
		协议
			物理层/数据链路层/网络层/传输层/会话层/表示层/应用层
			数据包组链
				MTU
			寻址/端口
		数据包传递
			数据报包传递
			虚电路包传递
		路由
			路由算法
				路由数据包
				更新路由信息:监控流量/配置变化
			简单的路由算法: 距离向量算法
				Bellman-Ford　
				如何建立路由表？
					RIP协议，更新路由表
				缺点
					收敛时间慢
					中间状态
			新的路由算法
				链路－状态算法
		拥塞控制
			排队/拥塞
			端-端的流量控制 tcp 
	网际互联
		集成许多子网需要
			统一的寻址方案
			定义数据包格式/协议
			互联组件
				路由器/网桥/集线器/交换机/隧道(软件层)
		互联网协议
			ip寻址
				需求
					通用的
					地址空间有效的
					有助于开发灵活的路由方案
				地址分类
					Ａ,B,C,D
				ip分配方案不是很有效:
					开发ipv6
					无等级域间路由CIDR
						子网划分/路由配置
					网络翻译方案(NAT)
			ip协议
				不可靠/尽力的语义
					丢失/重复/延迟/顺序错误
				分包(>MTU)
				添加物理网络地址(mac)
			地址解析
				ip -> mac 
				转换和网络技术相关
					交换机直连
						不需要地址翻译
					局域网动态分配网络地址
						从ip中抽取主机标识符
					以太网和其他局域网
						由网络硬件接口固定的，通过arp协议
				arp实现
					主机缓存<ip, mac>, 并且定期更新
					如果缺少某条记录，在以太网进行广播请求
				ip伪造
					ddos攻击
						tcp三次握手的漏洞
						icmp flood
			ip路由
				网络拓扑结构
					互联网 ->　自治系统(主干)　－＞　区域
				路由协议
					RIP-1
						基于距离－向量算法
					RIP-2
						链路－状态算法, 开放路径优先，基于Dijkstra
				默认路由
					每个路由器，维护一张路由表，避免路由表过大的方案:
						采用ip地址拓扑分组
							ip ->　地域信息
						距离主干链路最近的关键路由器　包含完整的路由表
							那么放宽大多数路由器中的路由表信息的精确性，配置默认目的地
					默认路由的使用，在表格大小和路由的有效性折中
				本地子网上的路由
					发送者和接收者在同一网络
						只需一跳就ok
					发送者和接收者在不同一网络
						需要先发到本地路由器，arp获取路由器的mac
				无类别域间路由(CIDR)
					给那些需要255个以上地址的子网分配一批连续的c类地址．
						主机/子网
					需要给路由表增加　掩码域



进程间通信
	种类
		点对点通信
		组播
			IP组播
			覆盖网络
	进程间通信的特征
		同步/异步通信
		消息目的地
			ip:port
			位置透明性
				名字服务/绑定器
		可靠性
			完整性
				没有损坏，没有重复
			有效性
				丢失合理数据包，仍能保证发送消息
	套件字socket
		udp
			通信相关问题
				消息大小
				阻塞
				超时
				任意接收
					udp bind
			udp故障模型
				遗漏故障
					校验和错误/缓冲区不够
				排序
					需要应用层保证
			udp的使用
				dns / voip
		tcp 
			流抽象隐藏的特征
				消息大小
				丢失的消息
					确认/重传
				流控制
				消息排序和重复
					消息标识符
				消息目的地
			通信相关问题
				数据项的匹配
					应用层协议
				阻塞
				线程模型/多路复用模型
			故障模型
				完整性
					校验和检查损坏的数据
					消息标识符检查重复的数据
				有效性
					超时和重传处理丢包
			tcp使用
				http
				ftp 
				telnet
				smtp
	外部数据表示和编码
		外部数据表示
			编码/解码
		表示方法
			CORBA
				CDR
			java的序列化/反序列化
			xml
			google proto buff
			json
	远程对象引用
		只针对java/corba支持分布式对象的语言
		分布式对象的唯一标识
			ip port timestamp obj-id obj-method
	组播通信
		为分布式系统提供基础设施:
			基于复制服务的容错
			基于自发网络中的发现服务
			通过复制的数据获得更好的性能
			时间通知的传播
		两种类型
			IP组播
				组播组
					动态
					只能udp实现
				ipv4特有
					组播路由器
						本地组播依赖于局域网(以太网)
						互联网的组播依赖组播路由器
					组播地址的分配
						Ｄ类地址
				组播数据包的故障模型
					遗漏故障
						和udp完全相同
					有序性
						需要应用层保证
			覆盖网络
				网络虚拟化
					在已知的网络上构造不同的虚拟网络，每个虚拟网络被设计成支持一个特定的分布式应用
				提供功能
					满足一类应用的需求
					在给定的联网环境中更有效
					额外的特色　
						组播/安全通信
				好处
					不改变底层网络，就能定义新的网络服务
					对网络服务实现/特殊定制
					定义多个覆盖网络，形成更加开放和可扩展的网络体系结构
				覆盖网络的类型
					为应用需求而裁剪
						分布式散列表
						对等文件共享
						内容分发网络
					为网络类型而裁剪
						无线自组织网络
						容中断网络
					提供额外的特性
						组播
						恢复能力
						安全性
				例子
					skype/mpi 


